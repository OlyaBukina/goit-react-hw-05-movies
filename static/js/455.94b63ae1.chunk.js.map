{"version":3,"file":"static/js/455.94b63ae1.chunk.js","mappings":"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","sources":["Api/fetchApi.js","components/Loader/Loader.jsx","components/MovieDescription/MovieDescription.styled.jsx","components/MovieDescription/MovieDescription.jsx","pages/MoviePage/MoviePage.styled.jsx","pages/MoviePage/MoviePage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'c5a1db41bd5eb56af64be0ab647b8aee';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async page => {\n  try {\n    return await axios.get(`trending/movie/day?`, {\n      params: {\n        api_key: API_KEY,\n        page,\n      },\n    });\n  } catch (error) {\n    throw new Error('Oops, something goes wrong!');\n  }\n};\n\nexport const getMoviesByKeyword = async (query, page) => {\n  try {\n    return await axios.get(`search/movie?`, {\n      params: {\n        api_key: API_KEY,\n        page,\n        query,\n      },\n    });\n  } catch (error) {\n    throw new Error('Oops, something goes wrong!');\n  }\n};\n\nexport async function getMovieById(movieId) {\n  try {\n    const movie = await axios.get(\n      `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return movie.data;\n  } catch (error) {\n    throw new Error('Oops, something goes wrong!');\n  }\n}\n\nexport async function getCast(movieId) {\n  try {\n    const cast = await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}`);\n    return cast.data.cast;\n  } catch (error) {\n    throw new Error('Oops, something goes wrong!');\n  }\n}\n\nexport async function getReviews(movieId) {\n  try {\n    const reviews = await axios.get(\n      `movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return reviews.data.results;\n  } catch (error) {\n    throw new Error('Oops, something goes wrong!');\n  }\n}\n\nexport function getPecentageValue(voteAverage) {\n  if (!voteAverage) {\n    return;\n  }\n  const percent = (voteAverage * 10).toFixed();\n  return `${percent}%`;\n}\n\nexport function getGenres(genres) {\n  if (!genres) {\n    return;\n  }\n  const allGenres = genres.map(genre => genre.name).join(', ');\n  return allGenres;\n}\n","import { RotatingLines } from 'react-loader-spinner';\nimport styled from 'styled-components';\n\nconst LoaderWrapper = styled.div`\n  display: flex;\n  height: 75vh;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Loader = () => {\n  return (\n    <LoaderWrapper>\n      <RotatingLines\n        strokeColor=\"#00467f\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        wrapperStyle={{ margin: '50px' }}\n        visible={true}\n      />\n    </LoaderWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const MovieWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 25px;\n`;\n\nexport const MovieInfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 3px;\n`;\n\nexport const MoviePoster = styled.img`\n  border-radius: 10px;\n  height: 70vh;\n`;\n\nexport const MovieMainTitle = styled.h2`\n  font-size: 32px;\n`;\n\nexport const MovieScore = styled.p`\n  font-size: 18px;\n  color: #00467f;\n`;\n\nexport const MovieInfoTitle = styled.h3`\n  font-size: 22px;\n`;\n\nexport const MovieInfoDesc = styled.p`\n  font-size: 16px;\n`;\n","import PropTypes from 'prop-types';\n\nimport {\n  MovieWrapper,\n  MovieInfoWrapper,\n  MoviePoster,\n  MovieMainTitle,\n  MovieScore,\n  MovieInfoTitle,\n  MovieInfoDesc,\n} from './MovieDescription.styled';\nimport { getPecentageValue, getGenres } from '../../Api/fetchApi';\n\nconst posterUrl = 'https://image.tmdb.org/t/p/w500';\nconst noPosterUrl = 'https://sd.keepcalms.com/i/keep-calm-poster-not-found.png';\n\nconst MovieDescription = ({\n  movieInfo: {\n    poster_path,\n    title,\n    vote_average,\n    genres,\n    overview,\n    release_date,\n  },\n}) => {\n  const allGenres = getGenres(genres);\n  const releaseDate = release_date ? release_date.slice(0, 4) : `Unknown`;\n  return (\n    <MovieWrapper>\n      <MoviePoster\n        src={poster_path ? `${posterUrl}${poster_path}` : noPosterUrl}\n        alt=\"Movie poster\"\n      />\n      <MovieInfoWrapper>\n        <MovieMainTitle>\n          {title}\n          {` (${releaseDate})`}\n        </MovieMainTitle>\n        <MovieScore>\n          User score:{' '}\n          {vote_average ? getPecentageValue(vote_average) : 'unknow'}\n        </MovieScore>\n        <MovieInfoTitle>Overview</MovieInfoTitle>\n        <MovieInfoDesc>{overview}</MovieInfoDesc>\n        <MovieInfoTitle>Genres</MovieInfoTitle>\n        <MovieInfoDesc>{genres ? allGenres : 'Unknow'}</MovieInfoDesc>\n      </MovieInfoWrapper>\n    </MovieWrapper>\n  );\n};\n\nMovieDescription.propTypes = {\n  movieInfo: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string,\n    vote_average: PropTypes.number,\n    genres: PropTypes.arrayOf(PropTypes.object),\n    overview: PropTypes.string,\n    release_date: PropTypes.string,\n  }).isRequired,\n};\n\nexport default MovieDescription;\n","import styled from 'styled-components';\nimport { Link, NavLink } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 14px;\n  gap: 5px;\n  background-color: #01b4e4;\n  border: 1.5px solid #01b4e4;\n  color: #fff;\n  border-radius: 10px;\n  padding: 10px;\n  margin: 10px;\n  width: 110px;\n  &:hover {\n    border-color: #01b4e4;\n    background-color: #fff;\n    color: #01b4e4;\n  }\n`;\n\nexport const MovieExtraInfo = styled.div`\n  padding: 15px;\n  /* padding-top: 15px;\n  padding-bottom: 15px; */\n`;\n\nexport const ExtraInfoTitle = styled.h4`\n  font-size: 22px;\n  margin-bottom: 7px;\n`;\nexport const ExtraInfoList = styled.div`\n  display: flex;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  gap: 7px;\n`;\nexport const ExtraInfoLink = styled(NavLink)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 14px;\n  gap: 5px;\n  background-color: #01b4e4;\n  color: #fff;\n  border-radius: 10px;\n  padding: 10px;\n  width: 110px;\n  &.active {\n    border: 1.5px solid #01b4e4;\n    background-color: #fff;\n    color: #01b4e4;\n  }\n`;\n","import { useEffect, useRef, useState, Suspense } from 'react';\nimport { useParams, useLocation, Outlet } from 'react-router-dom';\nimport { AiOutlineArrowLeft } from 'react-icons/ai';\nimport { getMovieById } from '../../Api/fetchApi';\nimport { Loader } from '../../components/Loader/Loader';\nimport MovieDescription from '../../components/MovieDescription/MovieDescription';\nimport {\n  StyledLink,\n  MovieExtraInfo,\n  ExtraInfoTitle,\n  ExtraInfoList,\n  ExtraInfoLink,\n} from './MoviePage.styled';\n\nconst MoviePage = () => {\n  const [movieInfo, setMovieInfo] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const getMovieInfo = async () => {\n      if (!movieId) return;\n      try {\n        const response = await getMovieById(movieId);\n        setMovieInfo(response);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getMovieInfo();\n  }, [movieId, setMovieInfo]);\n\n  return (\n    <div>\n      <StyledLink to={backLinkLocationRef.current}>\n        <AiOutlineArrowLeft />\n        Go back\n      </StyledLink>\n\n      <MovieDescription movieInfo={movieInfo} />\n\n      <MovieExtraInfo>\n        <ExtraInfoTitle>Additional information</ExtraInfoTitle>\n        <ExtraInfoList>\n          <ExtraInfoLink to=\"cast\">Cast</ExtraInfoLink>\n\n          <ExtraInfoLink to=\"reviews\">Reviews</ExtraInfoLink>\n        </ExtraInfoList>\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </MovieExtraInfo>\n    </div>\n  );\n};\n\nexport default MoviePage;\n"],"names":["API_KEY","axios","getTrendingMovies","page","params","api_key","Error","getMoviesByKeyword","query","getMovieById","movieId","movie","data","getCast","cast","getReviews","reviews","results","getPecentageValue","voteAverage","percent","toFixed","getGenres","genres","map","genre","name","join","LoaderWrapper","styled","Loader","strokeColor","strokeWidth","animationDuration","width","wrapperStyle","margin","visible","MovieWrapper","MovieInfoWrapper","MoviePoster","MovieMainTitle","MovieScore","MovieInfoTitle","MovieInfoDesc","movieInfo","poster_path","title","vote_average","overview","release_date","allGenres","releaseDate","slice","src","alt","StyledLink","Link","MovieExtraInfo","ExtraInfoTitle","ExtraInfoList","ExtraInfoLink","NavLink","useState","setMovieInfo","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","getMovieInfo","response","console","log","to","current","Suspense","fallback"],"sourceRoot":""}