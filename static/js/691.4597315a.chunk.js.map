{"version":3,"file":"static/js/691.4597315a.chunk.js","mappings":"mWAEMA,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAiB,mCAAG,WAAMC,GAAN,0FAEhBF,EAAAA,EAAAA,IAAA,sBAAiC,CAC5CG,OAAQ,CACNC,QAASL,EACTG,KAAAA,KALyB,8EASvB,IAAIG,MAAM,+BATa,wDAAH,sDAajBC,EAAkB,mCAAG,WAAOC,EAAOL,GAAd,0FAEjBF,EAAAA,EAAAA,IAAA,gBAA2B,CACtCG,OAAQ,CACNC,QAASL,EACTG,KAAAA,EACAK,MAAAA,KAN0B,8EAUxB,IAAIF,MAAM,+BAVc,wDAAH,wDAcxB,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,gGAEiBT,EAAAA,EAAAA,IAAA,gBACTS,EADS,oBACUV,EADV,oBAFjB,cAEGW,EAFH,yBAKIA,EAAMC,MALV,sCAOG,IAAIN,MAAM,+BAPb,gFAWA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAAuBH,GAAvB,gGAEgBT,EAAAA,EAAAA,IAAA,gBAAmBS,EAAnB,4BAA8CV,IAF9D,cAEGc,EAFH,yBAGIA,EAAKF,KAAKE,MAHd,sCAKG,IAAIR,MAAM,+BALb,gFASA,SAAeS,EAAtB,+CAAO,OAAP,oBAAO,WAA0BL,GAA1B,gGAEmBT,EAAAA,EAAAA,IAAA,gBACXS,EADW,4BACgBV,IAHnC,cAEGgB,EAFH,yBAKIA,EAAQJ,KAAKK,SALjB,sCAOG,IAAIX,MAAM,+BAPb,gFAWA,SAASY,EAAkBC,GAChC,GAAKA,EAAL,CAGA,IAAMC,GAAyB,GAAdD,GAAkBE,UACnC,MAAM,GAAN,OAAUD,EAAV,IAFC,CAGF,CAEM,SAASE,EAAUC,GACxB,GAAKA,EAIL,OADkBA,EAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,KAExD,C,kGC1EKC,EAAgBC,EAAAA,GAAAA,IAAH,+GAONC,EAAS,WACpB,OACE,SAACF,EAAD,WACE,SAAC,KAAD,CACEG,YAAY,UACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,aAAc,CAAEC,OAAQ,QACxBC,SAAS,KAIhB,C,gICrBYC,EAAaT,EAAAA,GAAAA,GAAH,mVAiBVU,EAAaV,EAAAA,GAAAA,GAAH,4CAIVW,EAAeX,EAAAA,GAAAA,IAAH,2TAmBZY,EAAcZ,EAAAA,GAAAA,EAAH,iUAiBXa,EAAab,EAAAA,GAAAA,EAAH,oF,mBC1DvB,EAA+B,iCAA/B,EAA4E,8BAA5E,EAAsH,8B,SC4EtH,EA3DkB,SAAC,GAAqC,IAAD,EAAlCc,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WAC9BC,GAAWC,EAAAA,EAAAA,MACjB,GAAuBC,EAAAA,EAAAA,MACjBxC,EAAK,WADX,eAC2ByC,IAAI,gBAApB,QAAgC,GAEnCC,EAAuCC,EAAzBC,EAAyBD,EAAdE,EAAcF,EAC/C,OACE,iCACE,SAACb,EAAD,UACGK,EAAOnB,KAAI,gBAAG8B,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAaC,EAA3B,EAA2BA,aAA3B,OACV,SAAClB,EAAD,WACE,UAAC,KAAD,CAAMmB,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMd,GAA1C,WACE,SAACN,EAAD,CACEqB,IAAKL,EAAW,UAhBd,mCAgBc,OAAkBA,GAf9B,4DAgBJM,IAAI,kBAEN,SAACrB,EAAD,UACGc,EAAMQ,OAAS,GAAf,UAAuBR,EAAMS,MAAM,EAAG,IAAM,QAAWT,KAE1D,SAACb,EAAD,UACGe,EAAeA,EAAaO,MAAM,EAAG,GAAzB,gBAVFV,EADP,MAkBbT,EAAa,IACZ,SAAC,IAAD,CAEEoB,eAAe,SAAC,MAAD,IACfC,WAAW,SAAC,MAAD,IACXC,cAAef,EACfgB,kBAAmBhB,EACnBiB,kBAAmBjB,EACnBkB,sBAAuBlB,EACvBmB,cAAenB,EACfoB,kBAAmBpB,EACnBqB,WAAW,MACXC,eAAgBtB,EAChBuB,mBAAoBvB,EACpBwB,UAAW/B,EACXgC,qBAAsB,EACtBC,mBAAoB,EACpBC,aAAcnC,EACdoC,mBAAoB9B,EACpB+B,gBAAiB5B,GAjBZ7C,KAsBd,C,wNClEY0E,GAAarD,EAAAA,EAAAA,IAAOsD,EAAAA,GAAPtD,CAAH,4EAKVuD,GAAavD,EAAAA,EAAAA,IAAOwD,EAAAA,GAAPxD,CAAH,6bAuBVyD,EAAezD,EAAAA,GAAAA,OAAH,4e,4BCyDzB,EA7Ee,WAAO,IAAD,EACnB,GAAoC0D,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAoCJ,EAAAA,EAAAA,UAAS,GAA7C,eAAO1C,EAAP,KAAmB+C,EAAnB,KACA,GAAwC5C,EAAAA,EAAAA,MAAxC,eAAO6C,EAAP,KAAqBC,EAArB,KACA,GAA4BP,EAAAA,EAAAA,UAAS,CACnC/E,MAAK,UAAEqF,EAAa5C,IAAI,gBAAnB,QAA+B,GACpC9C,KAAM,IAFR,eAAOC,EAAP,KAAe2F,EAAf,KAIMjD,GAAWC,EAAAA,EAAAA,OAUjBiD,EAAAA,EAAAA,YAAU,WACR,IAAQxF,EAAgBJ,EAAhBI,MAAOL,EAASC,EAATD,KACf,GAAKK,EAAL,CACA,IAAMyF,EAAS,mCAAG,wGAEdN,GAAa,GACbF,EAAc,IAHA,UAISlF,EAAAA,EAAAA,IAAmBC,EAAOL,GAJnC,OAIR+F,EAJQ,OAKRvD,EAASuD,EAAStF,KAAKK,QACvB4B,EAAaqD,EAAStF,KAAKuF,YACX,IAAlBxD,EAAOoB,SACTqC,EAAAA,GAAAA,MACE,+DAEFL,GAAU,kBAAK3F,GAAN,IAAcI,MAAO,GAAIL,KAAM,MAE1CyF,EAAc/C,GACd4C,EAAc9C,GAdA,kDAgBdyD,EAAAA,GAAAA,MAAY,KAAMC,SAhBJ,yBAkBdV,GAAa,GAlBC,6EAAH,qDAqBfM,GAtBkB,CAuBnB,GAAE,CAAC7F,IAKJ,OACE,iCACE,SAAC,KAAD,CAAQkG,cAAe,CAAE9F,MAAO,IAAM+F,SAxCrB,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACxBC,EAA8B,KAAjBF,EAAOhG,MAAe,CAAEA,MAAOgG,EAAOhG,OAAU,CAAC,EACpEsF,EAAgBY,GAEhBX,EAAU,CAAEvF,MAAOgG,EAAOhG,MAAOL,KAAM,IACvCsG,GACD,EAkCG,UACE,UAACvB,EAAD,YACE,SAACE,EAAD,CACEuB,KAAK,OACLjF,KAAK,QACLkF,aAAa,MACbC,WAAS,EACTC,YAAY,mBAEd,SAACxB,EAAD,CAAcqB,KAAK,SAAnB,SAA4B,gBAG/BjB,IAAa,SAAC5D,EAAA,EAAD,IACb0D,IACC,SAACuB,EAAA,EAAD,CACEpE,OAAQ6C,EACR7B,MAAO,CAAEC,KAAMd,GACfF,QAtBiB,SAAAoE,GACvBjB,GAAU,kBAAK3F,GAAN,IAAcD,KAAM6G,EAAMC,SAAW,IAC/C,EAqBOpE,WAAYA,KAGhB,SAAC,KAAD,MAGL,C","sources":["Api/fetchApi.js","components/Loader/Loader.jsx","components/MoviesList/MoviesList.styled.jsx","webpack://react-homework-template/./src/components/MoviesList/Pagination.module.css?2ca9","components/MoviesList/MoviesList.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'c5a1db41bd5eb56af64be0ab647b8aee';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async page => {\n  try {\n    return await axios.get(`trending/movie/day?`, {\n      params: {\n        api_key: API_KEY,\n        page,\n      },\n    });\n  } catch (error) {\n    throw new Error('Oops, something goes wrong!');\n  }\n};\n\nexport const getMoviesByKeyword = async (query, page) => {\n  try {\n    return await axios.get(`search/movie?`, {\n      params: {\n        api_key: API_KEY,\n        page,\n        query,\n      },\n    });\n  } catch (error) {\n    throw new Error('Oops, something goes wrong!');\n  }\n};\n\nexport async function getMovieById(movieId) {\n  try {\n    const movie = await axios.get(\n      `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return movie.data;\n  } catch (error) {\n    throw new Error('Oops, something goes wrong!');\n  }\n}\n\nexport async function getCast(movieId) {\n  try {\n    const cast = await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}`);\n    return cast.data.cast;\n  } catch (error) {\n    throw new Error('Oops, something goes wrong!');\n  }\n}\n\nexport async function getReviews(movieId) {\n  try {\n    const reviews = await axios.get(\n      `movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return reviews.data.results;\n  } catch (error) {\n    throw new Error('Oops, something goes wrong!');\n  }\n}\n\nexport function getPecentageValue(voteAverage) {\n  if (!voteAverage) {\n    return;\n  }\n  const percent = (voteAverage * 10).toFixed();\n  return `${percent}%`;\n}\n\nexport function getGenres(genres) {\n  if (!genres) {\n    return;\n  }\n  const allGenres = genres.map(genre => genre.name).join(', ');\n  return allGenres;\n}\n","import { RotatingLines } from 'react-loader-spinner';\nimport styled from 'styled-components';\n\nconst LoaderWrapper = styled.div`\n  display: flex;\n  height: 75vh;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Loader = () => {\n  return (\n    <LoaderWrapper>\n      <RotatingLines\n        strokeColor=\"#00467f\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        wrapperStyle={{ margin: '50px' }}\n        visible={true}\n      />\n    </LoaderWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledList = styled.ul`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-gap: 20px;\n  margin-bottom: 60px;\n\n  @media screen and (min-width: 768px) {\n    grid-template-columns: repeat(3, 1fr);\n    grid-gap: 24px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    grid-template-columns: repeat(4, 1fr);\n    grid-gap: 20px;\n  }\n`;\n\nexport const StyledItem = styled.li`\n  cursor: pointer;\n`;\n\nexport const StyledPoster = styled.img`\n  min-height: 402px;\n  object-fit: cover;\n  margin-bottom: 10px;\n  border-radius: 5px;\n\n  @media screen and (min-width: 768px) {\n    min-width: 180px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    /* min-width: 292px; */\n  }\n\n  &:hover {\n    transform: scale(1.03);\n  }\n`;\n\nexport const StyledTitle = styled.p`\n  text-transform: uppercase;\n  display: block;\n  font-weight: 600;\n  line-height: 1.33;\n  /* height: 16px; */\n  /* overflow: hidden; */\n  color: #000;\n\n  @media screen and (min-width: 1280px) {\n    height: 24px;\n    font-style: normal;\n    font-size: 16px;\n    line-height: 1.2;\n  }\n`;\n\nexport const StyledDate = styled.p`\n  color: #00457d;\n  font-weight: 700;\n  font-size: 16px;\n`;\n","// extracted by mini-css-extract-plugin\nexport default {\"pagContainer\":\"Pagination_pagContainer__sV3dJ\",\"pagButton\":\"Pagination_pagButton__fVNOa\",\"activeBtn\":\"Pagination_activeBtn__fTaNE\"};","import { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { AiOutlineArrowLeft, AiOutlineArrowRight } from 'react-icons/ai';\n\nimport {\n  StyledList,\n  StyledItem,\n  StyledPoster,\n  StyledTitle,\n  StyledDate,\n} from './MoviesList.styled';\nimport ReactPaginate from 'react-paginate';\n\nimport css from './Pagination.module.css';\n\nconst posterUrl = 'https://image.tmdb.org/t/p/w500';\nconst noPosterUrl = 'https://sd.keepcalms.com/i/keep-calm-poster-not-found.png';\n\nconst MovieList = ({ movies, onClick, totalPages }) => {\n  const location = useLocation();\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  const { pagContainer, pagButton, activeBtn } = css;\n  return (\n    <>\n      <StyledList>\n        {movies.map(({ id, title, poster_path, release_date }) => (\n          <StyledItem key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <StyledPoster\n                src={poster_path ? `${posterUrl}${poster_path}` : noPosterUrl}\n                alt=\"Movie poster\"\n              />\n              <StyledTitle>\n                {title.length > 26 ? `${title.slice(0, 26)}${' ...'}` : title}\n              </StyledTitle>\n              <StyledDate>\n                {release_date ? release_date.slice(0, 4) : `Unknown`}\n              </StyledDate>\n            </Link>\n          </StyledItem>\n        ))}\n      </StyledList>\n\n      {totalPages > 1 && (\n        <ReactPaginate\n          key={query}\n          previousLabel={<AiOutlineArrowLeft />}\n          nextLabel={<AiOutlineArrowRight />}\n          pageClassName={pagButton}\n          pageLinkClassName={pagButton}\n          previousClassName={pagButton}\n          previousLinkClassName={pagButton}\n          nextClassName={pagButton}\n          nextLinkClassName={pagButton}\n          breakLabel=\"...\"\n          breakClassName={pagButton}\n          breakLinkClassName={pagButton}\n          pageCount={totalPages}\n          marginPagesDisplayed={1}\n          pageRangeDisplayed={5}\n          onPageChange={onClick}\n          containerClassName={pagContainer}\n          activeClassName={activeBtn}\n        />\n      )}\n    </>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  onClick: PropTypes.func.isRequired,\n  totalPages: PropTypes.number.isRequired,\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const SearchForm = styled(Form)`\n  display: flex;\n  gap: 20px;\n  padding: 20px 0;\n`;\nexport const SearchFild = styled(Field)`\n  width: 100%;\n  height: 34px;\n  padding: 10px 14px;\n  font-weight: 400;\n  line-height: 1.16;\n  background: #ffffff;\n  border: 1.5px solid #032541;\n  border-radius: 15px;\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n    height: 38px;\n    width: 165px;\n    font-size: 14px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    height: 42px;\n    width: 300px;\n    padding: 10px 16px;\n  }\n`;\nexport const SearchButton = styled.button`\n  width: 135px;\n  height: 34px;\n  padding: 10px 14px;\n  font-weight: 700;\n  text-transform: uppercase;\n  line-height: 1.16;\n  color: #fff;\n  background: #00467f;\n  border: 1.5px solid #00467f;\n  border-radius: 15px;\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n    height: 38px;\n    width: 165px;\n    font-size: 14px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    height: 42px;\n    width: 105px;\n    padding: 10px 16px;\n  }\n`;\n","import { Formik } from 'formik';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { getMoviesByKeyword } from '../../Api/fetchApi';\nimport { SearchForm, SearchFild, SearchButton } from './Movies.styled';\nimport MoviesList from '../../components/MoviesList/MoviesList';\nimport { Loader } from '../../components/Loader/Loader';\n\nconst Movies = () => {\n  const [moviesList, setMoviesList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [totalPages, setTotalPages] = useState(0);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [params, setParams] = useState({\n    query: searchParams.get('query') ?? '',\n    page: 1,\n  });\n  const location = useLocation();\n\n  const onFormSubmit = (values, { resetForm }) => {\n    const nextParams = values.query !== '' ? { query: values.query } : {};\n    setSearchParams(nextParams);\n\n    setParams({ query: values.query, page: 1 });\n    resetForm();\n  };\n\n  useEffect(() => {\n    const { query, page } = params;\n    if (!query) return;\n    const getMovies = async () => {\n      try {\n        setIsLoading(true);\n        setMoviesList([]);\n        const response = await getMoviesByKeyword(query, page);\n        const movies = response.data.results;\n        const totalPages = response.data.total_pages;\n        if (movies.length === 0) {\n          toast.error(\n            'Search result not successful. Enter the correct movie name.'\n          );\n          setParams({ ...params, query: '', page: 1 });\n        }\n        setTotalPages(totalPages);\n        setMoviesList(movies);\n      } catch (error) {\n        toast.error(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMovies();\n  }, [params]);\n\n  const handlePageChange = event => {\n    setParams({ ...params, page: event.selected + 1 });\n  };\n  return (\n    <>\n      <Formik initialValues={{ query: '' }} onSubmit={onFormSubmit}>\n        <SearchForm>\n          <SearchFild\n            type=\"text\"\n            name=\"query\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Movie name...\"\n          />\n          <SearchButton type=\"submit\">Search</SearchButton>\n        </SearchForm>\n      </Formik>\n      {isLoading && <Loader />}\n      {moviesList && (\n        <MoviesList\n          movies={moviesList}\n          state={{ from: location }}\n          onClick={handlePageChange}\n          totalPages={totalPages}\n        />\n      )}\n      <ToastContainer />\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["API_KEY","axios","getTrendingMovies","page","params","api_key","Error","getMoviesByKeyword","query","getMovieById","movieId","movie","data","getCast","cast","getReviews","reviews","results","getPecentageValue","voteAverage","percent","toFixed","getGenres","genres","map","genre","name","join","LoaderWrapper","styled","Loader","strokeColor","strokeWidth","animationDuration","width","wrapperStyle","margin","visible","StyledList","StyledItem","StyledPoster","StyledTitle","StyledDate","movies","onClick","totalPages","location","useLocation","useSearchParams","get","pagContainer","css","pagButton","activeBtn","id","title","poster_path","release_date","to","state","from","src","alt","length","slice","previousLabel","nextLabel","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakLabel","breakClassName","breakLinkClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","activeClassName","SearchForm","Form","SearchFild","Field","SearchButton","useState","moviesList","setMoviesList","isLoading","setIsLoading","setTotalPages","searchParams","setSearchParams","setParams","useEffect","getMovies","response","total_pages","toast","message","initialValues","onSubmit","values","resetForm","nextParams","type","autoComplete","autoFocus","placeholder","MoviesList","event","selected"],"sourceRoot":""}